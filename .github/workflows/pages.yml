name: Deploy Stoppclock to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  NODE_VERSION: 22
  CUSTOM_DOMAIN: www.stoppclock.com
  TARGET_URL: https://www.stoppclock.com/

jobs:
  guard:
    name: CI Guard (Block vendor remnants)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install
        run: npm ci

      - name: Run doctor (Repo scan)
        run: npm run doctor

  build:
    needs: guard
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Bump SW cache key with commit SHA
        run: |
          sed -i "s/__BUILD__/${{ github.sha }}/g" public/sw.js

      - name: Build
        run: npm run build

      - name: Add CNAME and .nojekyll
        run: |
          echo "${{ env.CUSTOM_DOMAIN }}" > ./dist/CNAME
          touch ./dist/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  postcheck:
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install
        run: npm ci

      - name: Wait for DNS propagation
        run: sleep 30

      - name: Run doctor:prod (Live scan)
        env:
          TARGET_URLS: ${{ env.TARGET_URL }}
        run: npm run doctor:prod
